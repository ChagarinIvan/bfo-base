name: Laravel

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7.22
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel_test
          MYSQL_USER: test
          MYSQL_PASSWORD: secret
          MYSQL_ROOT_PASSWORD: secretroot
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.2'
    - uses: actions/checkout@v3
    - name: Copy .env
      run: |
        php -r "file_exists('.env') || copy('.env.example', '.env');"
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=laravel_test" >> .env
        echo "DB_USERNAME=test" >> .env
        echo "DB_PASSWORD=secret" >> .env
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Verify MySQL connection
      run: |
        mysql --version
        mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -utest -psecret -e "SHOW DATABASES"
    - name: Wait for MySQL to become ready
      run: |
        for i in {1..30}; do
          nc -z 127.0.0.1 3306 && echo Success && exit 0
          echo -n .
          sleep 1
        done
        echo Failed waiting for MySQL && exit 1
    - name: Migrate Database
      run: php artisan migrate --force
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        MYSQL_DATABASE: laravel_test
        DB_USERNAME: test
        DB_PASSWORD: secret
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
      run: vendor/bin/phpunit tests/
    - name: Execute stan
      run: vendor/bin/phpstan analyse -l 5 app tests config
